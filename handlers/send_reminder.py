import asyncio
import logging
import aioschedule
import calendar
from datetime import date
from aiogram.utils.exceptions import BotBlocked

from keyboards.inline_answer import inline_confirm_user, inline_rating, inline_send_answer
from postgre.commands_db import select_active_meetings, db_deactivate_meeting, db_change_day, select_user, \
    select_all_result_meet_month, select_result_meet_month_for_user, bd_make_free_user, \
    select_active_meeting_after_confirmed, bd_is_free_user


def plural_days(n):
    days = ['–¥–µ–Ω—å', '–¥–Ω—è', '–¥–Ω–µ–π']

    if n % 10 == 1 and n % 100 != 11:
        p = 0
    elif 2 <= n % 10 <= 4 and (n % 100 < 10 or n % 100 >= 20):
        p = 1
    else:
        p = 2
    return days[p]


async def get_last_day(dp, get_last_day_month):
    start_month = date.today().replace(day=1)
    end_month = date.today().replace(day=int(get_last_day_month))
    all_act_meet = select_all_result_meet_month(start_month, end_month)
    done_user = []
    for meet in all_act_meet:
        user_id = meet[1]
        if user_id not in done_user:
            all_meet_for_user = select_result_meet_month_for_user(user_id, start_month, end_month)
            companions = []
            for end_meet in all_meet_for_user:
                companion = select_user(end_meet[2])
                if companion and companion[0] not in companions:
                    companions.append(companion[0])
            logging.info('–ü—Ä–æ–±—É–µ–º —Ä–∞–∑–æ—Å–ª–∞—Ç—å –æ–ø—Ä–æ—Å –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞')
            try:
                await dp.bot.send_message(user_id, 'üìà–°–æ–±–∏—Ä–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –≤ –∫–æ–Ω—Ü–µ –º–µ—è—Ü–∞.\n '
                                                   '–ö—Ç–æ –∏–∑ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ?'
                                                   ' –ö–æ–º—É –¥–æ–±–∞–≤–∏–º –µ—â—ë –æ–¥–∏–Ω –±–∞–ª–ª?',
                                          reply_markup=inline_rating(user_id, companions))
                logging.info('–£—Å–ø–µ—à–Ω–æ')
            except BotBlocked as BotB:
                logging.info(f'ERROR BOT CODE - {str(BotB)}\n –ß—Ç–æ —Ç–æ —Ç—É—Ç –ø—Ä–æ–∏–∑–æ—à–ª–æ —Å '
                             f'–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ –æ–ø—Ä–æ—Å–∞ –≤ –∫–æ–Ω—Ü–µ –º–µ—Å—è—Ü–∞: {user_id}')
            done_user.append(user_id)
        await asyncio.sleep(1)


async def send_seven_days(dp):
    logging.info('–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É send_seven_days')
    all_meetings = select_active_meetings()
    if all_meetings:
        for meeting in all_meetings:
            user = select_user(meeting[1])[0]
            user_about = select_user(meeting[2])[0]

            if meeting[5] == 1:
                db_deactivate_meeting(meeting[0])
                bd_make_free_user(user[0])
                bd_make_free_user(user_about[0])

                # –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É:
                free_user_now = bd_is_free_user(meeting[1])
                logging.info(f'–ü—Ä–æ–±—É–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å –æ—Ç –æ—Ç–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é(69 —Å—Ç—Ä) --> {user}')
                if free_user_now[0][0]:
                    try:
                        await dp.bot.send_message(meeting[1], f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –í–∞—à—É –≤—Å—Ç—Ä–µ—á—É'
                                                              f' c {user_about[1]} ( {user_about[2]} ).')
                        logging.info('–£—Å–ø–µ—à–Ω–æ')
                    except BotBlocked:
                        logging.info(f'{meeting} - f{meeting[1]} —á—Ç–æ —Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,'
                                     f' –Ω–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ!')
                else:
                    logging.info(f'{meeting} - {meeting[1]} –ü–æ–∫–∏–Ω—É–ª –±–æ—Ç–∞')
            else:
                new_day = meeting[5] - 1
                db_change_day(meeting[0], new_day)

                # –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É:
                free_user_now = bd_is_free_user(meeting[1])
                logging.info(f'–ü—Ä–æ–±—É–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é(86 —Å—Ç—Ä) --> {user}')
                if free_user_now[0][0]:
                    try:
                        await dp.bot.send_message(meeting[1], f'–í—ã –µ—â–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏ –≤—Å—Ç—Ä–µ—á—É c'
                                                              f' {user_about[1]} ( {user_about[2]} ), –æ—Å—Ç–∞–ª–æ—Å—å {new_day} {plural_days(new_day)}!',
                                                  reply_markup=inline_confirm_user(user[0], user_about[0]))
                        logging.info('–£—Å–ø–µ—à–Ω–æ')
                    except BotBlocked:
                        logging.info(f'{meeting} - f{meeting[1]} —á—Ç–æ —Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,'
                                     f' –Ω–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ!')
                else:
                    logging.info(f'{meeting} - f{meeting[1]} –ü–æ–∫–∏–Ω—É–ª –±–æ—Ç–∞')
            await asyncio.sleep(1)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —á—Ç–æ–±—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å
    all_meetings_bef_conf = select_active_meeting_after_confirmed()
    if all_meetings_bef_conf:
        logging.info(f'–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –¥–æ–≥–æ–≤–æ—Ä–∏–ª—Å—è –Ω–æ –Ω–µ –≤—Å—Ç—Ä–µ—Ç–∏–ª—Å—è')
        for meeting_conf in all_meetings_bef_conf:
            user = select_user(meeting_conf[1])[0]
            user_about = select_user(meeting_conf[2])[0]

            if meeting_conf[5] == 1:
                db_deactivate_meeting(meeting_conf[0])
                bd_make_free_user(user[0])
                bd_make_free_user(user_about[0])

                # –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É:
                free_user_now = bd_is_free_user(meeting_conf[1])
                logging.info(f'–ü—Ä–æ–±—É–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å –æ–± –æ—Ç–º–µ–Ω–µ –≤—Å—Ç—Ä–µ—á–∏ (114 —Å—Ç—Ä) --> {user}')
                if free_user_now[0][0]:
                    try:
                        await dp.bot.send_message(meeting_conf[1], f'–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤–∞—à—É –≤—Å—Ç—Ä–µ—á—É c '
                                                                   f'{user_about[1]} ( {user_about[2]} ).')
                        logging.info('–£—Å–ø–µ—à–Ω–æ')
                    except BotBlocked:
                        logging.info(f'{meeting_conf} - f{meeting_conf[1]} —á—Ç–æ —Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,'
                                     f' –Ω–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ!')
                else:
                    logging.info(f'{meeting_conf} - f{meeting_conf[1]} –ü–æ–∫–∏–Ω—É–ª –±–æ—Ç–∞')
            else:
                new_day = meeting_conf[5] - 1
                db_change_day(meeting_conf[0], new_day)
                # –ü—Ä–æ–≤–µ—Ä–∫–∞, –º–æ–∂–Ω–æ –ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É:
                free_user_now = bd_is_free_user(meeting_conf[1])
                logging.info(f'–ü—Ä–æ–±—É–µ–º –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é(130 —Å—Ç—Ä) --> {user}')
                if free_user_now[0][0]:
                    try:
                        await dp.bot.send_message(meeting_conf[1], f'–í—ã –µ—â–µ –Ω–µ —Å—Ö–æ–¥–∏–ª–∏ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É —Å'
                                                                   f' {user_about[1]} ( {user_about[2]} ), –æ—Å—Ç–∞–ª–æ—Å—å {new_day} {plural_days(new_day)}! '
                                                                   f'–ü–æ –∏—Å—Ç–µ—á–µ–Ω–∏—é {new_day} {plural_days(new_day)}, –≤—Å—Ç—Ä–µ—á–∞ –∞–Ω–Ω—É–ª–∏—Ä—É–µ—Ç—Å—è!',
                                                  reply_markup=inline_send_answer(user[0], user_about[0]))
                        logging.info('–£—Å–ø–µ—à–Ω–æ')
                    except BotBlocked:
                        logging.info(f'{meeting_conf} - f{meeting_conf[1]} —á—Ç–æ —Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º,'
                                     f' –Ω–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ!')

                else:
                    logging.info(f'{meeting_conf} - f{meeting_conf[1]} –ü–æ–∫–∏–Ω—É–ª –±–æ—Ç–∞')
            await asyncio.sleep(1)

    year_now = date.today().strftime('%Y')
    month_now = date.today().strftime('%m')
    day_now = int(date.today().strftime('%d'))
    get_last_day_month = calendar.monthrange(int(year_now), int(month_now))[1]

    # if 28 == int(day_now):
    if get_last_day_month == int(day_now):
        await get_last_day(dp, get_last_day_month)

async def start_remimber(dp):
    aioschedule.every().day.at("8:00").do(send_seven_days, dp)
    # aioschedule.every(15).seconds.do(send_seven_days, dp)
    while True:
        await aioschedule.run_pending()
        await asyncio.sleep(1)
